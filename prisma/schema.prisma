// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model company {
  id        Int      @id @default(autoincrement())
  name      String
  items     item[]
  itemTypes item_type[]
  users     user[]
  sales     sale[]
}

model sale {
  id        String   @id @default(uuid())
  saleAt    DateTime @default(now())
  updatedAt DateTime @updatedAt
  companyId Int
  company   company @relation(fields: [companyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  items     item[]
}

model item {
  id        Int     @id @default(autoincrement())
  location  String?
  comment   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  companyId Int
  company   company @relation(fields: [companyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  saleId    String?
  sale      sale?   @relation(fields: [saleId], references: [id],  onDelete: SetNull, onUpdate: Cascade)
  itemTypeId String
  itemType   item_type @relation(fields: [itemTypeId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model item_type {
  id        String      @id @default(uuid())
  name      String
  price     Int
  amount    Int
  companyId Int
  company   company  @relation(fields: [companyId], references: [id] , onDelete: Cascade, onUpdate: Cascade)
  items     item[]
}

model user {
  id        Int      @id @default(autoincrement())
  email     String?  @unique
  username  String   @unique
  password  String
  isCompanyAdmin Boolean @default(false)
  companyId Int
  company   company  @relation(fields: [companyId], references: [id] , onDelete: Cascade, onUpdate: Cascade)
}
